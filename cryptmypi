#!/bin/bash
set -eu

# Creates a configurable kali pi build

# Load functions, environment variables and dependencies
. functions.sh;
. env.sh;
. options.sh;

print_usage(){
  local usage
  usage=$(cat << 'HERE' 
Usage: sudo ./cryptmypi.sh ARG1

BEFORE Running the script. make sure you first create your env.sh based on one of the examples or the template.
Then comment in/out the functions in optional_setup to what you want.
If you forget to add a variable in, the script may exit and tell you or choose a reasonable default.
The script also checks for ordering of optional setup.

ARG1 can be:
-b or build - standard build
-nx or build_no_extract - build without preparing the filesystem
-m or mount_only - only mount an image or disk
-u or unmount - unmount
-i or initramfs - mount and run mkinitramfs
-i or optional - run optional setup only
-h or help - prints this help message
HERE
)
  echo_info "$usage";
}

main(){
  echo_info "$(basename "$0") started"

  trap 'trap_on_exit 0' EXIT;

  check_run_as_root;

  case $1 in
    build|-b)
      #build normally
      build;
      ;;
    build_no_extract|-nx)
      #build but do not extract files from downloaded image
      build_no_extract;
      ;;
    mount_only|-m)
      #mount the image only
      mount_only;
      ;;
    initramfs|-i)
     #mount and run initramfs 
      make_initramfs;
      ;;
    unmount|-u)
     #unmount new image
      unmount;
      ;;
    help|-h)
      #print help
      print_usage;
      ;;
    optional|-o)
      #mount, run optional setup and generate initramfs
      optional_only;
      ;;
    *)
      print_usage;
      ;;
  esac
  exit 0;
}

# Run program
#TODO Bats testing
main "${1:-'-h'}";
