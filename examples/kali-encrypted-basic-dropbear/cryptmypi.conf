# LINUX IMAGE FILE ------------------------------------------------------------
export _IMAGENAME=kali-linux-2020.4-rpi4-nexmon-64.img
export _IMAGEURL=https://images.kali.org/arm-images/${_IMAGENAME}
#export _IMAGESHA="c6ceee472eb4dabf4ea895ef53c7bd28751feb44d46ce2fa3f51eb5469164c2c"
export _IMAGESHA=""

# PACKAGE ACTIONS -------------------------------------------------------------
export _PKGSPURGE=""
export _PKGSINSTALL="tree htop ufw"


# MINIMAL SSH CONFIG ----------------------------------------------------------
#   Keyfile to be used to access the system remotelly through ssh.
#   Its public key will be added to the system's root .ssh/authorized_keys
export _SSH_LOCAL_KEYFILE="$_USER_HOME/.ssh/id_rsa"
#Set to 'no' for only key based auth.
#Dropbear sss auth amendments NEED.
export _SSH_PASSWORD_AUTHENTICATION="yes"

###############################################################################
## Stage 1 Settings ###########################################################

# Custom Stage1 Profile
#   Check functions/stage1profiles.fns for reference. You may instruct hooks
#   here or you may call one predefined stage1profile functions.
# Optional: if stage1_hooks function is not defined, a prompt will be displayed
stage1_hooks(){
    stage1profile_complete
}


#   Optional function: can be ommited.
stage1_optional_hooks(){
    myhooks "experimental-initramfs-wifi"
    myhooks "optional-initramfs-luksnuke"

}

# DNS settings ----------------------------------------------------------------
#   Sets DNS servers to be used by the system
# Hooks
#   preconditions-dns
#   optional-sys-dns
#   optional-initramfs-sshhub
#   experimental-initramfs-wifi
#   optional-sys-wifi

# Optional variable (default: "1.1.1.1")
#export _DNS1='1.1.1.1'

# Optional variable (default: "8.8.8.8")
#export _DNS2='8.8.8.8'


# WIFI settings ---------------------------------------------------------------
# Hooks
#   optional-initramfs-wifi
#       Attempts to set wifi up at initramfs, so one can wirelessly expose
#       dropbear's LUKS unlocking mechanism (without ethernet).
#   optional-sys-wifi
#       Attemps to preconfigure system wifi.

## SSID the network name
export _WIFI_SSID='SKYNET'

## Wifi network password
export _WIFI_PASS='helloworld'

## Wifi
export _WIFI_INTERFACE='wlan0'

## Kernel IP param
#     This parameter tells the kernel how to configure IP addresses of devices
#     and also how to set up the IP routing table. If this parameter is missing
#     from the kernel command line, all fields are assumed to be empty, and the
#     defaults mentioned below apply. In general this means that the kernel
#     tries to configure everything using autoconfiguration.
#
#            ip=<client-ip>:<server-ip>:<gw-ip>:<netmask>:
#                <hostname>:<device>:<autoconf>:<dns0-ip>:<dns1-ip>
#
#     For more info, check
#         https://www.kernel.org/doc/Documentation/filesystems/nfs/nfsroot.txt
# Optional variable (default: ':::::${_INITRAMFS_WIFI_INTERFACE}:dhcp:${_DNS1}:${_DNS2}:')
#export _INITRAMFS_WIFI_IP=":::::${_INITRAMFS_WIFI_INTERFACE}:dhcp:${_DNS1}:${_DNS2}"

## Modules to load at the initramfs, add your wifi firmware and drivers here
#     For reference, each Raspberry PI version's default wifi chipset:
#     - RPi0W     bcm43438 ou bcm43430a¹
#     - RPi3b     bcm43430a¹
#     - RPi3b+    bcm43455c0
#     - RPi4b+    brcmfmac43455
# Optional variable (default:'brcmfmac brcmutil cfg80211 rfkill')
#export _INITRAMFS_WIFI_DRIVERS='brcmfmac43455 brcmfmac brcmutil cfg80211 rfkill'


###############################################################################
## Stage-2 Settings ###########################################################


# Optional stage 2 hooks
#   If declared, this function is called during stage2 build by the
#   stage2-runoptional hook.
#
#   Optional function: can be ommited.
stage2_optional_hooks(){
    myhooks "optional-sys-rootpassword"
#    myhooks "optional-sys-wifi"
}


###############################################################################
##Optional Hook Settings #####################################################


# ROOT PASSWORD CHANGER settings ----------------------------------------------
# Hooks
#   optional-sys-rootpassword
#       Changes the system root password

## The new root password
export _ROOTPASSWD="toor"

# LUKSNUKE settings -----------------------------------------------------------
# Hooks
#   optional-initramfs-luksnuke
#       Sets LUKS nuke password. When used, nuke erases the encrypted headers.

## Nuke password
export _LUKSNUKEPASSWD="luks_nuke_password"
