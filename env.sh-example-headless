#!/bin/bash

declare -xi _NO_PROMPTS="0"; #1 or 0
declare -x _LUKS_PASSWORD="CHANGEME"
declare -x _SSH_KEY_PASSPHRASE="CHANGEME"
declare -x _WIFI_PASSWORD='CHANGEME'
declare -x _ROOT_PASSWORD="toor"
declare -x _NEW_DEFAULT_USER="kali"
declare -x _USER_PASSWORD="ilak"
declare -x _LUKS_NUKE_PASSWORD="."
###############################################
declare -x _DNS1='1.1.1.1'
declare -x _DNS2='9.9.9.9'
###############################################
declare -x _CPU_GOVERNOR="ondemand" #can be 'performance'
###############################################
#declare -x _IODINE_DOMAIN="iodine"
#declare -x _IODINE_PASSWORD="CHANGE ME"
###############################################
#declare -x _OPENVPN_CONFIG_ZIP="openvpn.zip"
###############################################
declare -x _HOSTNAME="pikal"
declare -x _KERNEL_VERSION_FILTER="8l"
declare -x _LOCALE='en_US.UTF-8'
###############################################
declare -x _OUTPUT_BLOCK_DEVICE="/dev/sda"
declare -x _FILESYSTEM_TYPE="btrfs"; #can also be ext4
###############################################
#0 = debug messages and normal, 1 normal only
declare -xi _LOG_LEVEL=1
###############################################
declare -x _LUKS_CONFIGURATION="--type luks2 --cipher aes-xts-plain64 --key-size 512 --use-random --hash sha512 --pbkdf argon2i --iter-time 5000"
###############################################
declare -x _PKGS_TO_INSTALL=""
declare -x _PKGS_TO_PURGE=""
###############################################
declare -x _IMAGE_SHA256="c6ceee472eb4dabf4ea895ef53c7bd28751feb44d46ce2fa3f51eb5469164c2c"
declare -x _IMAGE_URL="https://images.kali.org/arm-images/kali-linux-2020.4-rpi4-nexmon-64.img.xz"
###############################################
declare -x _SSH_LOCAL_KEYFILE="$_FILE_DIR/id_rsa"
declare -x _SSH_PASSWORD_AUTHENTICATION="no"
declare -x _SSH_BLOCK_SIZE='4096'
#SSH PORT used in dropbear setup, ufw setup optional scripts
declare -x _SSH_PORT='2222'
declare -x _SFTP_PASSWORD="CHANGEME"
###############################################
declare -x _WIFI_SSID='WIFI'
declare -x _WIFI_INTERFACE='wlan0'
###############################################
declare -x _INITRAMFS_WIFI_IP=":::::${_WIFI_INTERFACE}:dhcp:${_DNS1}:${_DNS2}"
declare -x _INITRAMFS_WIFI_DRIVERS='brcmfmac brcmutil cfg80211 rfkill'
declare -x _INITRAMFS_WIFI_INTERFACE='wlan0'
declare -xi _IMAGE_MODE=1; #write to an image rather than directly to disk
###############################################
#Optional and experimental hooks, runs when the image is being prepared
optional_setup(){
wifi_setup
initramfs_wifi_setup
ssh_setup
dropbear_setup
luks_nuke_setup
cpu_governor_setup
hostname_setup
root_password_setup
user_password_setup
#vpn_client_setup
fake_hwclock_setup
ntpsec_setup
#iodine_setup
bluetooth_setup
packages_setup
sftp_setup
sysctl_hardening_setup
#avahi_setup
miscellaneous_setup
secure_dns_setup
#simple_dns_setup
}
